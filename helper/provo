##
# Helper function(s)
#
#	    ____  _________ _   ______ 
#	   / __ \/ ___/ __ \ | / / __ \
#	  / /_/ / /  / /_/ / |/ / /_/ /
#	 / .___/_/   \____/|___/\____/ 
#	/_/                            
#
##

function mmtests_tc {

  [ -e ${mmtestsTC} ] && {
	while read -r testCase tcc
	    do
		[ ${tcc} -le 0 ] && continue
		tcCount=0
		while [[ ${tcc} -gt ${tcCount} ]]
		    do
			tcCount=$((tcCount+1))

			cd ${mmtestsDir}
			[ -L ${mmtestsLog}/SCOPE ] || ln -s ${cacheDir}/SCOPE ${mmtestsLog}/SCOPE
			[ -L ${mmtestsLog}/TESTCASE ] || ln -s ${cacheDir}/TESTCASE ${mmtestsLog}/TESTCASE

			# check if already run
		  	[ -d ${mmtestsLog}/${testCase}/${tcPrefix}${tcCount}-${scopeSuf} ] && continue

			# denote scope / target test case
		  	echo "${scopeSuf}" > ${mmtestsLog}/SCOPE
		  	echo "${testCase}" > ${mmtestsLog}/TESTCASE
		  	echo -n "Scope - ${tcPrefix}${tcCount}-${scopeSuf} : " 
		  	echo -n " TestCase - ${testCase} ... "

			# run target test case
		  	OF=${logDir}/mmtests-${testCase}-${tcPrefix}${tcCount}-${scopeSuf}
		  	echo "# $(date +"%Y-%m-%dT%H:%M:%S")" >> ${OF}
		  	${mmtestsDir}/run-mmtests.sh \
			  --no-monitor \
			  --config configs/${testCase} \
			  ${testCase}/${tcPrefix}${tcCount}-${scopeSuf} \
			  >> ${OF} 2>&1 && echo "[x]" || echo "[failed]"

			# return to a consistent state for next test case run (via systemd timer)
		  	clone
		  	systemctl reboot && exit 0

		    done
	
	    done < ${mmtestsTC}
  }

  return 0

}

function phoronix_tc {

  [ -e ${phoronixTC} ] && {
	while read -r testCase tcc
	    do
		[ ${tcc} -le 0 ] && continue
		tcCount=0
		while [[ ${tcc} -gt ${tcCount} ]]
		    do
			tcCount=$((tcCount+1))

			cd ${phoronixDir}
			[ -L ${phoronixLog}/SCOPE ] || ln -s ${cacheDir}/SCOPE ${phoronixLog}/SCOPE
			[ -L ${phoronixLog}/TESTCASE ] || ln -s ${cacheDir}/TESTCASE ${phoronixLog}/TESTCASE

			# check if test case is already installed
		  	/usr/bin/phoronix-test-suite install ${testCase}

			# check if already run
		  	[ -d ${phoronixLog}/test-results/${testCase}results/system-logs/${tcPrefix}${tcCount}-${scopeSuf} ] && continue

			# denote scope / target test case
		  	echo "${scopeSuf}" > ${phoronixLog}/SCOPE
		  	echo "${testCase}" > ${phoronixLog}/TESTCASE
		  	echo -n "Scope - ${tcPrefix}${tcCount}-${scopeSuf} : " 
		  	echo -n " TestCase - ${testCase} ... "

			# run target test case
		  	OF=${logDir}/phoronix-${testCase}-${tcPrefix}${tcCount}-${scopeSuf}
		  	echo "# $(date +"%Y-%m-%dT%H:%M:%S")" >> ${OF}
		  	echo -e "${testCase}results\n${tcPrefix}${tcCount}-${scopeSuf}" | \
			/usr/bin/phoronix-test-suite \
			  batch-run \
			  ${testCase} \
			  >> ${OF} 2>&1 && echo "[x]" || echo "[failed]"

			# return to a consistent state for next test case run (via systemd timer)
		  	clone
		  	systemctl reboot && exit 0
	
		    done
	
	    done < ${phoronixTC}
  }

  return 0

}
